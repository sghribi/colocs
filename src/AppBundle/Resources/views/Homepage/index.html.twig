{% extends 'AppBundle::base.html.twig' %}

{% block body %}
  {# Autocomplete input#}
  <input id="map-input" class="controls" type="text" placeholder="Saisissez l'adresse ou le nom du lieu souhaitÃ©" />

  {# Map #}
  <div id="map"></div>

  {# Init map #}
  <script type="text/javascript">
    var map;
    var houses;

    function addMarkers (houses) {
      $.each(houses, function (index, house) {
        var infowindow = new google.maps.InfoWindow({
          content: JSON.stringify(house)
        });

        var marker = new google.maps.Marker({
          position: {lat: house.latitude, lng: house.longitude},
          map: map
        });

        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });
      });
    }


    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 48.765165, lng:  2.288402},
        zoom: 14,
        mapTypeControlOptions: {
          style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
          position: google.maps.ControlPosition.TOP_CENTER
        },
        panControl: false,
        zoomControl: true,
        zoomControlOptions: {
          position: google.maps.ControlPosition.LEFT_CENTER
        },
        mapTypeControl: false,
        scaleControl: true,
        streetViewControl: true,
        overviewMapControl: true
      });

      // ECP
      var ecpMarker = new google.maps.Marker({
        map: map,
        anchorPoint: new google.maps.Point(0, -29)
      });
      ecpMarker.setPosition({lat: 48.765165, lng:  2.288402});

      // Add autocomplete
      var input = document.getElementById('map-input');
      var autocomplete = new google.maps.places.Autocomplete(input);
      autocomplete.bindTo('bounds', map);

      autocomplete.addListener('place_changed', function() {
        var place = autocomplete.getPlace();
        if (!place.geometry) {
          return;
        }

        if (place.geometry.viewport) {
          map.fitBounds(place.geometry.viewport);
        } else {
          map.setCenter(place.geometry.location);
          map.setZoom(17);
        }
      });
    }

  </script>
  <script async defer src="https://maps.googleapis.com/maps/api/js?callback=initMap&libraries=places"></script>
{% endblock %}
